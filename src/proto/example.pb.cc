// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example {

namespace {

const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_example_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_example_2eproto() {
  protobuf_AddDesc_example_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "example.proto");
  GOOGLE_CHECK(file != NULL);
  User_descriptor_ = file->message_type(0);
  static const int User_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, emails_),
  };
  User_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      -1,
      -1,
      -1,
      sizeof(User),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_example_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      User_descriptor_, &User::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_example_2eproto() {
  delete User::default_instance_;
  delete User_reflection_;
}

void protobuf_AddDesc_example_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_example_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rexample.proto\022\007example\"0\n\004User\022\n\n\002id\030\001"
    " \001(\005\022\014\n\004name\030\002 \001(\t\022\016\n\006emails\030\003 \003(\tb\006prot"
    "o3", 82);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example.proto", &protobuf_RegisterTypes);
  User::default_instance_ = new User();
  User::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_example_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_example_2eproto {
  StaticDescriptorInitializer_example_2eproto() {
    protobuf_AddDesc_example_2eproto();
  }
} static_descriptor_initializer_example_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kEmailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.User)
}

void User::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

User::User(const User& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.User)
}

void User::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

User::~User() {
  // @@protoc_insertion_point(destructor:example.User)
  SharedDtor();
}

void User::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_example_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:example.User)
  id_ = 0;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emails_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example.User.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_emails;
        break;
      }

      // repeated string emails = 3;
      case 3: {
        if (tag == 26) {
         parse_emails:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_emails()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->emails(this->emails_size() - 1).data(),
            this->emails(this->emails_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example.User.emails"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_emails;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.User)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string emails = 3;
  for (int i = 0; i < this->emails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->emails(i).data(), this->emails(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.User.emails");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->emails(i), output);
  }

  // @@protoc_insertion_point(serialize_end:example.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.User)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string emails = 3;
  for (int i = 0; i < this->emails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->emails(i).data(), this->emails(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.User.emails");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->emails(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example.User)
  return target;
}

int User::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:example.User)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated string emails = 3;
  total_size += 1 * this->emails_size();
  for (int i = 0; i < this->emails_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->emails(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example.User)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const User* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example.User)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  emails_.MergeFrom(from.emails_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {

  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  emails_.UnsafeArenaSwap(&other->emails_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// optional int32 id = 1;
void User::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 User::id() const {
  // @@protoc_insertion_point(field_get:example.User.id)
  return id_;
}
 void User::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:example.User.id)
}

// optional string name = 2;
void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:example.User.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example.User.name)
}
 void User::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example.User.name)
}
 void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example.User.name)
}
 ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:example.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:example.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:example.User.name)
}

// repeated string emails = 3;
int User::emails_size() const {
  return emails_.size();
}
void User::clear_emails() {
  emails_.Clear();
}
 const ::std::string& User::emails(int index) const {
  // @@protoc_insertion_point(field_get:example.User.emails)
  return emails_.Get(index);
}
 ::std::string* User::mutable_emails(int index) {
  // @@protoc_insertion_point(field_mutable:example.User.emails)
  return emails_.Mutable(index);
}
 void User::set_emails(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:example.User.emails)
  emails_.Mutable(index)->assign(value);
}
 void User::set_emails(int index, const char* value) {
  emails_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:example.User.emails)
}
 void User::set_emails(int index, const char* value, size_t size) {
  emails_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:example.User.emails)
}
 ::std::string* User::add_emails() {
  // @@protoc_insertion_point(field_add_mutable:example.User.emails)
  return emails_.Add();
}
 void User::add_emails(const ::std::string& value) {
  emails_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:example.User.emails)
}
 void User::add_emails(const char* value) {
  emails_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:example.User.emails)
}
 void User::add_emails(const char* value, size_t size) {
  emails_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:example.User.emails)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
User::emails() const {
  // @@protoc_insertion_point(field_list:example.User.emails)
  return emails_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
User::mutable_emails() {
  // @@protoc_insertion_point(field_mutable_list:example.User.emails)
  return &emails_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)
